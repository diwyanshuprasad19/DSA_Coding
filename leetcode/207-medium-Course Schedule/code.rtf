{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red20\green20\blue20;}
{\*\expandedcolortbl;;\cssrgb\c100000\c100000\c100000;\cssrgb\c10196\c10196\c10196;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Question:https://leetcode.com/problems/course-schedule/description/\
\
Dol:https://leetcode.com/problems/course-schedule/solutions/6195016/using-bfs-cycle-check-kahn-s-algorithm-topological-sort/\
\
\
class Solution \{\
public:\
\
bool toposortcheck(unordered_map<int,vector<int>>& adj, int n, vector<int>& indegree)\{ \
    queue<int> que;\
    for(int i =0; i<n; i++)\{\
        if(indegree[i] == 0) que.push(i);\
    \}\
    int count = 0; \
    while(!que.empty())\{\
        int u = que.front();\
        que.pop();\
        count++;\
\
        for(int v : adj[u])\{\
            indegree[v]--;\
            if(indegree[v] == 0) que.push(v);\
        \}\
    \}\
\
    return count == n; \
\}\
\
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) \{\
        unordered_map<int,vector<int>> adj;\
        vector<int> indegree(numCourses,0);\
\
        for(auto &vec : prerequisites)\{\
            int a = vec[0];\
            int b = vec[1];\
            adj[b].push_back(a); \
            indegree[a]++;\
        \}\
\
        return toposortcheck(adj, numCourses, indegree);\
    \}\
\};}