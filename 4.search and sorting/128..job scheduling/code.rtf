{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\froman\fcharset0 Times-Bold;
\f3\froman\fcharset0 Times-Roman;\f4\fnil\fcharset0 STIXTwoMath-Regular;}
{\colortbl;\red255\green255\blue255;\red70\green137\blue204;\red30\green30\blue30;\red202\green202\blue202;
\red67\green192\blue160;\red212\green214\blue154;\red140\green211\blue254;\red89\green138\blue67;\red183\green111\blue179;
\red167\green197\blue152;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c33725\c61176\c83922;\cssrgb\c15686\c15686\c15686;\cssrgb\c83137\c83137\c83137;
\cssrgb\c30588\c78824\c69020;\cssrgb\c86275\c86275\c66667;\cssrgb\c61176\c86275\c99608;\cssrgb\c41569\c60000\c33333;\cssrgb\c77255\c52549\c75294;
\cssrgb\c70980\c80784\c65882;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
https://leetcode.com/problems/maximum-profit-in-job-scheduling/submissions/1498372726/\
\
\
Code:\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 class\cf4 \strokec4  \cf5 \strokec5 Solution\cf4 \strokec4  \{\cb1 \
\cf2 \cb3 \strokec2 public:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 int\cf4 \strokec4  \cf6 \strokec6 jobScheduling\cf4 \strokec4 (\cf5 \strokec5 vector\cf4 \strokec4 <\cf2 \strokec2 int\cf4 \strokec4 >\cf2 \strokec2 &\cf4 \strokec4  \cf7 \strokec7 startTime\cf4 \strokec4 , \cf5 \strokec5 vector\cf4 \strokec4 <\cf2 \strokec2 int\cf4 \strokec4 >\cf2 \strokec2 &\cf4 \strokec4  \cf7 \strokec7 endTime\cf4 \strokec4 , \cf5 \strokec5 vector\cf4 \strokec4 <\cf2 \strokec2 int\cf4 \strokec4 >\cf2 \strokec2 &\cf4 \strokec4  \cf7 \strokec7 profit\cf4 \strokec4 ) \{\cb1 \
\cb3         \cf2 \strokec2 int\cf4 \strokec4  n = \cf7 \strokec7 profit\cf4 \strokec4 .\cf6 \strokec6 size\cf4 \strokec4 ();\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8         // Struct to store jobs\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3         \cf2 \strokec2 struct\cf4 \strokec4  \cf5 \strokec5 Job\cf4 \strokec4  \{\cb1 \
\cb3             \cf2 \strokec2 int\cf4 \strokec4  startTime, endTime, profit;\cb1 \
\cb3         \};\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8         // Create and sort jobs by end time\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3         vector<Job> jobs;\cb1 \
\cb3         \cf9 \strokec9 for\cf4 \strokec4  (\cf2 \strokec2 int\cf4 \strokec4  i = \cf10 \strokec10 0\cf4 \strokec4 ; i < n; ++i) \{\cb1 \
\cb3             \cf7 \strokec7 jobs\cf4 \strokec4 .\cf6 \strokec6 push_back\cf4 \strokec4 (\{\cf7 \strokec7 startTime\cf4 \strokec4 [i], \cf7 \strokec7 endTime\cf4 \strokec4 [i], \cf7 \strokec7 profit\cf4 \strokec4 [i]\});\cb1 \
\cb3         \}\cb1 \
\cb3         \cf6 \strokec6 sort\cf4 \strokec4 (\cf7 \strokec7 jobs\cf4 \strokec4 .\cf6 \strokec6 begin\cf4 \strokec4 (), \cf7 \strokec7 jobs\cf4 \strokec4 .\cf6 \strokec6 end\cf4 \strokec4 (), [](\cf2 \strokec2 const\cf4 \strokec4  \cf5 \strokec5 Job\cf2 \strokec2 &\cf4 \strokec4  \cf7 \strokec7 a\cf4 \strokec4 , \cf2 \strokec2 const\cf4 \strokec4  \cf5 \strokec5 Job\cf2 \strokec2 &\cf4 \strokec4  \cf7 \strokec7 b\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf9 \strokec9 return\cf4 \strokec4  \cf7 \strokec7 a\cf4 \strokec4 .\cf7 \strokec7 endTime\cf4 \strokec4  < \cf7 \strokec7 b\cf4 \strokec4 .\cf7 \strokec7 endTime\cf4 \strokec4 ;\cb1 \
\cb3         \});\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8         // DP array to store the maximum profit\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3         vector<\cf2 \strokec2 int\cf4 \strokec4 > \cf6 \strokec6 dp\cf4 \strokec4 (n + \cf10 \strokec10 1\cf4 \strokec4 , \cf10 \strokec10 0\cf4 \strokec4 );\cb1 \
\
\cb3         \cf9 \strokec9 for\cf4 \strokec4  (\cf2 \strokec2 int\cf4 \strokec4  i = \cf10 \strokec10 0\cf4 \strokec4 ; i < n; ++i) \{\cb1 \
\cb3             \cf2 \strokec2 int\cf4 \strokec4  low = \cf10 \strokec10 0\cf4 \strokec4 , high = i;\cb1 \
\cb3             \cf2 \strokec2 int\cf4 \strokec4  targetTime = \cf7 \strokec7 jobs\cf4 \strokec4 [i].\cf7 \strokec7 startTime\cf4 \strokec4 ;\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8             // Binary search for the latest non-conflicting job\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3             \cf9 \strokec9 while\cf4 \strokec4  (low < high) \{\cb1 \
\cb3                 \cf2 \strokec2 int\cf4 \strokec4  mid = (low + high) / \cf10 \strokec10 2\cf4 \strokec4 ;\cb1 \
\cb3                 \cf9 \strokec9 if\cf4 \strokec4  (\cf7 \strokec7 jobs\cf4 \strokec4 [mid].\cf7 \strokec7 endTime\cf4 \strokec4  <= targetTime) \{\cb1 \
\cb3                     low = mid + \cf10 \strokec10 1\cf4 \strokec4 ;\cb1 \
\cb3                 \} \cf9 \strokec9 else\cf4 \strokec4  \{\cb1 \
\cb3                     high = mid;\cb1 \
\cb3                 \}\cb1 \
\cb3             \}\cb1 \
\
\cb3             \cf2 \strokec2 int\cf4 \strokec4  latestNonConflictJobIndex = low;\cf8 \strokec8  // Result of binary search\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \strokec8             // Update DP array\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3             \cf7 \strokec7 dp\cf4 \strokec4 [i + \cf10 \strokec10 1\cf4 \strokec4 ] = \cf6 \strokec6 max\cf4 \strokec4 (\cf7 \strokec7 dp\cf4 \strokec4 [i], \cf7 \strokec7 dp\cf4 \strokec4 [latestNonConflictJobIndex] + \cf7 \strokec7 jobs\cf4 \strokec4 [i].\cf7 \strokec7 profit\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf9 \strokec9 return\cf4 \strokec4  \cf7 \strokec7 dp\cf4 \strokec4 [n];\cb1 \
\cb3     \}\cb1 \
\cb3 \};\cb1 \
\
\
\
\pard\pardeftab720\sa280\partightenfactor0

\f2\b\fs28 \cf0 \strokec11 Summary\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 Time Complexity
\f3\b0 : 
\f4 O\uc0\u8232 (\u8232 n\u8232 \u8901 \u8232 log\u8232 \u8289 \u8232 n\u8232 )\u8232 \u8232 
\f3 O(n \\cdot \\log n)
\f4 \uc0\u8232 
\f3 O(n\uc0\u8901 logn)\
\ls1\ilvl0
\f2\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 Space Complexity
\f3\b0 : 
\f4 O\uc0\u8232 (\u8232 n\u8232 )\u8232 \u8232 
\f3 O(n)
\f4 \uc0\u8232 
\f3 O(n)\
}