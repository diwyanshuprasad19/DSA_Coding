{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\froman\fcharset0 Times-Bold;
\f3\fnil\fcharset0 STIXTwoMath-Regular;\f4\froman\fcharset0 Times-Roman;\f5\fmodern\fcharset0 Courier-Bold;
\f6\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red51\green146\blue255;\red13\green13\blue13;\red237\green237\blue237;
\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c24314\c65098\c100000;\cssrgb\c5882\c5882\c5882;\cssrgb\c94510\c94510\c94510;
\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Sol:https://www.youtube.com/watch?v=SvM5Y1PDiiA\
\
code:\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.youtube.com/hashtag/include"}}{\fldrslt 
\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 #include}}
\f1\fs28 \cf4 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4  <bits/stdc++.h>\
using namespace std;\
void solve()\
\{\
	int n, q;\
	cin>>n>>q;\
	vector<vector<int>> arr(n,vector<int>(2,0));\
	for(int i=0;i<n;i++)\
	\{\
		int a,b;\
		cin>>a>>b;\
		arr[i][0] = a;\
		arr[i][1] = b;\
	\}\
	// merge\
	   sort(arr.begin(), arr.end());\
        int ind = 0;\
        for(int i=1;i<arr.size();i++)\
        \{\
            if(arr[ind][1]>=arr[i][0])\
            \{\
                arr[ind][1] = max(arr[ind][1],arr[i][1]);\
            \}\
            else\
            \{  \
				ind++;\
				arr[ind] = arr[i];\
            \}\
        \}\
	while(q--)\
	\{\
		int qrr;\
		cin>>qrr;\
		int i=0;\
		bool flag = false;\
        int sum;\
		while(i<=ind)\
		\{   sum = (arr[i][1]-arr[i][0]+1);\
            \
			if(sum>=qrr)\
			\{   flag = true;\
                int l = arr[i][0];\
               // cout<<sum<<" "<<qrr<<endl;\
				cout<<l+(qrr-1)<<endl;\
				break;\
			\}\
            qrr-=sum;\
			i++;\
		\}\
		if(!flag) cout<<"-1"<<endl;\
	\}\
\
\}\
int main() \{\
	int num;\
	cin >> num;    //Reading input from STDIN\
	while(num--) solve();\
	return 0;\
\}\
\
\pard\pardeftab720\partightenfactor0

\f2\b\fs24 \cf0 \cb1 \strokec5 Time Complexity:
\f3\b0 \
O\
(\
n\
log\
\uc0\u8289 \
n\
+\
q\
\'d7\
n\
)\
\pard\pardeftab720\partightenfactor0

\f4 \cf0 O(n \\log n + q \\times n)
\f3 \
\pard\pardeftab720\partightenfactor0

\f4 \cf0 O(nlogn+q\'d7n)\
\pard\pardeftab720\partightenfactor0

\f2\b \cf0 Space Complexity:
\f3\b0 \
O\
(\
n\
)\
\pard\pardeftab720\partightenfactor0

\f4 \cf0 O(n)
\f3 \
\pard\pardeftab720\partightenfactor0

\f4 \cf0 O(n)\
\
\
\pard\pardeftab720\sa240\partightenfactor0

\f5\b\fs26 \cf0 \strokec5 n
\f4\b0\fs24 : Represents the number of intervals given as input.\uc0\u8232 Each interval is defined by a start and an end, and there are 
\f6\fs26 n
\f4\fs24  such intervals in total.\

\f5\b\fs26 q
\f4\b0\fs24 : Represents the number of queries.\uc0\u8232 Each query asks for the 
\f6\fs26 qrr
\f4\fs24 -th smallest number among all the numbers represented by the intervals (after merging overlapping intervals).\
}