{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include <iostream>\
using namespace std;\
\
class Queue \{\
    int start, end, currsize, *arr, maxsize;\
\
public:\
    Queue(int x) \{\
        start = -1;\
        end = -1;\
        maxsize = x;\
        arr = new int[maxsize];\
        currsize = 0;\
    \}\
\
    void push(int x) \{\
        if (currsize == maxsize) \{  // Fixed the overflow condition\
            cout << "Queue is full" << endl;\
            return;\
        \}\
        if (end == -1) \{\
            start = 0;\
            end = 0;\
        \} else \{\
            end = (end + 1) % maxsize;\
        \}\
        arr[end] = x;\
        currsize++;\
    \}\
\
    int pop() \{\
        if (currsize == 0) \{  // Fixed the underflow condition\
            cout << "Queue is empty" << endl;\
            return -1;\
        \}\
        int x = arr[start];\
        if (currsize == 1) \{\
            start = -1;\
            end = -1;\
        \} else \{\
            start = (start + 1) % maxsize;\
        \}\
        currsize--;\
        return x;\
    \}\
\
    int front() \{\
        if (currsize == 0) \{\
            cout << "Queue is empty" << endl;\
            return -1;\
        \}\
        return arr[start];\
    \}\
\
    int Size() \{\
        return currsize;\
    \}\
\};\
\
int main() \{\
    Queue q(16);\
    q.push(7);\
    q.push(8);\
    q.push(9);\
    q.push(10);\
\
    cout << "Popped: " << q.pop() << endl;\
    cout << "Front element: " << q.front() << endl;\
    cout << "Queue size: " << q.Size() << endl;\
\
    return 0;\
\}}